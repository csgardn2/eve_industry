{
    "definitions": {
        "args": {
            "type": "object",
            "description": "Command line argument validator and storage structure.",
            "properties": {
                "mode": {
                    "type": "string",
                    "enum": ["fetch-item-attributes", "fetch-structure-attributes"],
                    "description": "The high-level operation that this tool is to perform."
                },
                "item_attributes_out": {
                    "type": "string",
                    "description": "Name of a file to write info about all of the EvE inventory items to."
                },
                "item_attributes_in": {
                    "type": "string",
                    "description": "Name of a file to read info about all of the EvE inventory items to."
                },
                "station_attributes_in": {
                    "type": "string",
                    "description": "Name of a file to to read for static infomation about a market station such as its ID, region, and solar system."
                },
                "prices_out": {
                    "type": "string",
                    "description": "Live market buy and sell prices for specific items at specific stations."
                }
            }
        },
        "item_attribute": {
            "type": "object",
            "description": "Static information about one inventory item in EvE.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Integral uniquifier used by the EvE Swagger API.",
                    "minimum": 0
                },
                "name": {
                    "type": "string",
                    "description": "Name of an item, such as Tritanium.",
                    "minLength": 1
                }
            },
            "required": ["id", "name"]
        },
        "item_attributes": {
            "type": "array",
            "description": "Collection of multiple item descriptions.",
            "items": {
                "$ref": "#/definitions/item_attribute"
            }
        },
        "item_ids": {
            "type": "array",
            "description": "Set of valid integral uniquifiers used by the EvE Swagger API.",
            "items": {
                "type": "integer",
                "minimum": 0
            }
        },
        "station_attribute": {
            "type": "object",
            "description": "Static information about an NPC station in EvE.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of a station, such as 'Jita IV - Moon 4 - Caldari Navy Assembly Plant'.",
                    "minLength": 1
                },
                "station_id": {
                    "type": "integer",
                    "description": "The integral uniquifier for this station, as used by the EvE swagger interface.",
                    "minimum": 0
                },
                "system_id": {
                    "type": "integer",
                    "description": "The integral uniquifier for the solar system containing this station, as used by the EvE swagger interface.",
                    "minimum": 0
                },
                "region_id": {
                    "type": "integer",
                    "description": "The integral uniquifier for the region containing this station, as used by the EvE swagger interface.",
                    "minimum": 0
                }
            },
            "required": ["name", "id", "system", "region"]
        },
        "station_attributes": {
            "type": "array",
            "description": "Collection of multiple station descriptions.",
            "items": {
                "$ref": "#/definitions/station_attribute"
            }
        },
        "raw_regional_market": {
            "type": "object",
            "description": "Orders fetched directly from the Swagger API with minimal post-processing.  These are post-processed into galactic_market objects later.",
            "properties": {
                "region_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/raw_order"
                    }
                }
            },
            "required": ["region_id", "orders"]
        },
        "raw_order": {
            "type": "object",
            "description": "A standing buy or sell offer at a specific station fetched directly from the swagger API with minimal post-processing.",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "The asking buy or sell price for this order.",
                    "minimum": 0.0
                },
                "item_id": {
                    "type": "integer",
                    "description": "Integral uniquifier of an inventory item in EvE.",
                    "minimum": 0
                },
                "order_type": {
                    "type": "string",
                    "enum": ["buy", "sell"]
                },
                "station_id": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "required": ["price", "item_id", "station_id", "order_type"]
        },
        "galactic_market": {
            "type": "array",
            "description": "Zero or more regions containing market hubs.",
            "items": {
                "$ref": "#/definitions/regional_market"
            }
        },
        "regional_market": {
            "type": "object",
            "description": "Zero or more market bearing stations within a single region.  These are post-processed orders.",
            "properties": {
                "region_id": {
                    "type": "integer",
                    "description": "Integral uniquifier of this region as used by the EvE Swagger interface.",
                    "minimum": 0
                },
                "stations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/station_market"
                    }
                }
            },
            "required": ["region_id", "stations"]
        },
        "station_market": {
            "type": "object",
            "description": "A station capable of selling zero or more item types.",
            "properties": {
                "station_id": {
                    "type": "integer",
                    "description": "Integral uniquifier of this station as used by the EvE Swagger interface.",
                    "minimum": 0
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/item_market"
                    }
                }
            },
            "required": ["station_id", "items"]
        },
        "item_market": {
            "type": "object",
            "description": "All of the buy and sell orders for one specific item at a station.",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Integral uniquifier of this item as used by the EvE Swagger interface.",
                    "minimum": 0
                },
                "buy_orders": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "sell_orders": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "required": ["item_id", "buy_orders", "sell_orders"]
        },
        "blueprint": {
            "type": "object",
            "description": "Stores all of the manufacture, copy, and invention attributes of a blueprint.",
            "properties": {
                "blueprint_id": {
                    "type": "integer",
                    "description": "The integral ID of this blueprint original, not its output product.",
                    "minimum": 0
                },
                "requires_invention": {
                    "type": "boolean",
                    "description": "Set this to true if you can only acquire this blueprint via invention and want to include the average invention costs will be included in profitability reports."
                },
                "manufacture": {
                    "type": "object",
                    "properties": {
                        "time": {
                            "type": "integer",
                            "description": "The number of seconds required for 1 manufacturing run at 0 TE."
                        },
                        "input_materials": {
                            "type": "array",
                            "description": "List of materials and quantities consumed during 1 manufacturing run at 0 ME.",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "item_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                },
                                "required": ["item_id", "quantity"]
                            }
                        },
                        "output_materials": {
                            "type": "array",
                            "description": "The items produced by a single successfull manufacturing run of this blueprint.",
                            "properties": {
                                "item_id": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "quantity": {
                                    "type": "integer",
                                    "description": "The amount of this item produced by a single manufacturing run.",
                                    "minimum": 0
                                }
                            },
                            "required": ["item_id", "quantity"]
                        },
                        "material_efficiency": {
                            "type": "integer",
                            "description": "Percent reduction in required input materials.",
                            "minimum": 0,
                            "maximum": 10
                        },
                        "time_efficiency": {
                            "type": "integer",
                            "description": "Percent reduction in the time required for manufacture.",
                            "minimum": 0,
                            "maximum": 20
                        }
                    },
                    "required": ["time", "input_materials", "output_materials", "material_efficiency", "time_efficiency"]
                },
                "copy": {
                    "type": "object",
                    "properties": {
                        "time": {
                            "type": "integer",
                            "description": "The amount of time to create a single 1-run copy of this blueprint at 0TE.",
                            "minimum": 0
                        },
                        "input_materials": {
                            "type": "array",
                            "description": "List of materials and quantities consumed during 1 copy run at 0 ME.",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "item_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                },
                                "required": ["item_id", "quantity"]
                            }
                        }
                    },
                    "required": ["time", "input_materials"]
                },
                "invent": {
                    "type": "array",
                    "description": "This is an array because some T1 blueprints have multiple choices for what you'd like ti invent.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "type": "integer",
                                "description": "The time required to perform an invention run on a single 1-run input blueprint copy.",
                                "minimum": 0
                            },
                            "probability": {
                                "type": "number",
                                "description": "The probability of successfully inventing this blueprint with no skills, bonuses, or decryptors.",
                                "minimum": 0.0,
                                "maximum": 1.0
                            },
                            "input_materials": {
                                "type": "array",
                                "description": "List of materials and datacores but NOT decryptors and their quantities consumed when inventing a single 1-run BPC.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "item_id": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    },
                                    "required": ["item_id", "quantity"]
                                }
                            },
                            "blueprint_id": {
                                "type": "integer",
                                "description": "Integral ID of the T2 blueprint copy produced after an invention run.",
                                "minimum": 0
                            },
                            "material_efficiency": {
                                "type": "integer",
                                "description": "Material efficiency of the resultant T2 blueprint with no decryptors.",
                                "minimum": 0,
                                "maximum": 10
                            },
                            "time_efficiency": {
                                "type": "integer",
                                "description": "Time efficiency of the resultant T2 blueprint with no decryptors.",
                                "minimum": 0,
                                "maximum": 20
                            },
                            "runs": {
                                "type": "integer",
                                "description": "Runs per copy for a single output T2 blueprint with no decryptors.",
                                "minimum": 0
                            }
                        },
                        "required": ["time", "probability", "input_materials", "bluerpint_id", "material_efficiency", "time_efficiency", "runs"]
                    }
                }
            },
            "required": ["blueprint_id", "requires_invention", "manufacture", "copy", "invent"]
        },
        "blueprints": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/blueprint"
            }
        },
        "blueprint_profit": {
            "type": "object",
            "description": "Reports various profit margins and scores for a particular blueprint.",
            "properties": {
                "blueprint_id": {
                    "type": "integer",
                    "description": "This profitability report was generated for the blueprint with this ID.",
                    "minimum": 0
                },
                "time": {
                    "type": "integer",
                    "description": "Total time to produce 1 final output item including copy and invention time.  Assumes that all input materials are purchased and not manufactured.  Invention time is weighted using the invention probability.",
                    "minimum": 0
                },
                "total_cost": {
                    "type": "number",
                    "description": "Sum of all costs including input materials, datacores, decryptors.  Invention costs are weighted by the probability of success.",
                    "minimum": 0.0
                },
                "output_value": {
                    "type": "number",
                    "description": "Value of the output items produced by one manufacturing run.  For example, a mjolnir fury light missil run produces 5000 missiles.  If these missiles sell for 87 ISK each then this value would be 435000.",
                    "minimum": 0
                },
                "optimal_decryptor_id": {
                    "type": "integer",
                    "description": "If manufacturing this item reqires invention, these decryptor will maximize your profit amount.  Can be null.",
                    "minimum": 0
                },
                "profit_amount": {
                    "type": "number",
                    "description": "Calculated using output_value - total_cost."
                },
                "profit_percent": {
                    "type": "number",
                    "description": "Calculated using output_value / total_cost."
                },
                "profit_per_second": {
                    "type": "number",
                    "description": "Calculated using (output_value - total_cost) / time."
                }
            },
            "required": ["blueprint_id", "time", "total_cost", "output_value", "optimal_decryptor_id"]
        },
        "station_profits": {
            "type": "object",
            "description": "Blueprint profitabilities based on the lowest sell orders at this station.",
            "properties": {
                "station_id": {
                    "type": "integer",
                    "description": "Indicates which station's prices were used for these profit calculations.",
                    "minimum": 0
                },
                "profits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blueprint_profit"
                    }
                }
            },
            "required": ["station_id", "profits"]
        },
        "galactic_profits": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/station_profits"
            }
        }
    }
}

